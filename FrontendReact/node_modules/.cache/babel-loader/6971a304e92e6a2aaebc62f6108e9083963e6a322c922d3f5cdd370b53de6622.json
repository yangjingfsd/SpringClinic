{"ast":null,"code":"var _jsxFileName = \"/Users/jing/Documents/Others/FSD_11/Course/WebDevelopment_II/FinalProject/SpringClinic/FrontReact/springclinic/src/Appointment.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Appointment = () => {\n  _s();\n  const [appointments, setAppointments] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [httpError, setHttpError] = useState(null);\n  useEffect(() => {\n    const fetchAppointments = async () => {\n      const baseUrl = \"http://localhost:8080/appointments\";\n      const url = `${baseUrl}?page=0size=9`;\n      const response = await fetch(url);\n      if (!response.ok) {\n        throw new Error('Something went wrong!');\n      }\n      const responseJson = await response.json();\n      const responseData = responseJson._embedded.appointments;\n      const loadedAppointments = [];\n      for (const key in responseData) {\n        loadedAppointments.push({\n          appid: responseData[key].appid,\n          docid: responseData[key].docid,\n          patid: responseData[key].patid,\n          date: responseData[key].date,\n          time: responseData[key].time,\n          service: responseData[key].service\n        });\n      }\n      setAppointments(loadedAppointments);\n      setIsLoading(false);\n    };\n    fetchAppointments().catch(error => {\n      setIsLoading(false);\n      setHttpError(error.message);\n    });\n  }, []);\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"contain m-5\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading ...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this);\n  }\n  if (httpError) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container m-5\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: httpError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Make an appointment.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n};\n_s(Appointment, \"blSMkGjbrpRnwO07EAs1do1rGHQ=\");\n_c = Appointment;\nvar _c;\n$RefreshReg$(_c, \"Appointment\");","map":{"version":3,"names":["useEffect","useState","jsxDEV","_jsxDEV","Appointment","_s","appointments","setAppointments","isLoading","setIsLoading","httpError","setHttpError","fetchAppointments","baseUrl","url","response","fetch","ok","Error","responseJson","json","responseData","_embedded","loadedAppointments","key","push","appid","docid","patid","date","time","service","catch","error","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/jing/Documents/Others/FSD_11/Course/WebDevelopment_II/FinalProject/SpringClinic/FrontReact/springclinic/src/Appointment.tsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport AppointmentModel from \"./AppointmentModel\";\n\nexport const Appointment = () => {\n    const [appointments, setAppointments] = useState<AppointmentModel[]>([]);\n    const [isLoading, setIsLoading] = useState(true);\n    const [httpError, setHttpError] = useState(null);\n\n    useEffect(() => {\n        const fetchAppointments = async () => {\n            const baseUrl: string = \"http://localhost:8080/appointments\";\n            const url: string = `${baseUrl}?page=0size=9`;\n            const response = await fetch(url);\n            if (!response.ok) {\n                throw new Error('Something went wrong!');\n            }\n            const responseJson = await response.json();\n            const responseData = responseJson._embedded.appointments;\n            const loadedAppointments: AppointmentModel[] = [];\n            for (const key in responseData) {\n                loadedAppointments.push({\n                    appid: responseData[key].appid,\n                    docid: responseData[key].docid,\n                    patid: responseData[key].patid,\n                    date: responseData[key].date,\n                    time: responseData[key].time,\n                    service: responseData[key].service,\n                });\n            }\n            setAppointments(loadedAppointments);\n            setIsLoading(false);\n        };\n\n        fetchAppointments().catch((error: any) => {\n            setIsLoading(false);\n            setHttpError(error.message);\n        })\n    }, []);\n\n    if(isLoading) {\n        return (\n            <div className=\"contain m-5\">\n                <p>Loading ...</p>\n            </div>\n        );\n    }\n\n    if(httpError) {\n        return(\n            <div className=\"container m-5\">\n                <p>{httpError}</p>\n            </div>\n        );\n\n    }\n\n    return (\n        <div>\n            <p>Make an appointment.</p>\n        </div>\n\n    );\n\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}