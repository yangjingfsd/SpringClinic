{"ast":null,"code":"var _jsxFileName = \"/Users/jing/Documents/Others/FSD_11/Course/WebDevelopment_II/FinalProject/SpringClinic/FrontReact/springclinic/src/DoctorSelect.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const DoctorSelect = () => {\n  _s();\n  const [doctors, setDoctors] = useState([]);\n  const [httpError, setHttpError] = useState(null);\n  useEffect(() => {\n    const fetchDoctors = async () => {\n      const baseUrl = \"http://localhost:8080/doctors\";\n      const url = `${baseUrl}?page=0&size=9`;\n      const response = await fetch(url);\n      if (!response.ok) {\n        throw new Error('Something went wrong!');\n      }\n      const responseJson = await response.json();\n      const responseData = responseJson._embedded.doctors;\n      const loadedDoctors = [];\n      for (const key in responseData) {\n        loadedDoctors.push({\n          docid: responseData[key].docid,\n          name: responseData[key].name,\n          gender: responseData[key].gender,\n          email: responseData[key].email,\n          phone: responseData[key].phone,\n          expertise: responseData[key].expertise\n        });\n      }\n      setDoctors(loadedDoctors);\n    };\n    fetchDoctors().catch(error => {\n      setHttpError(error.message);\n    });\n  }, []);\n  const doctorList = doctors.map(doc => {\n    return /*#__PURE__*/_jsxDEV(\"option\", {\n      value: doc.docid,\n      children: doc.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"select\", {\n      className: \"form-select\",\n      \"aria-label\": \"Default select example\",\n      name: \"docid\",\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        selected: true,\n        children: \"Choose Doctor\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 3\n      }, this), doctorList]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 1\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 1\n  }, this);\n};\n_s(DoctorSelect, \"7adBUGhWCtLk18zgKDTYcOi+a7o=\");\n_c = DoctorSelect;\nvar _c;\n$RefreshReg$(_c, \"DoctorSelect\");","map":{"version":3,"names":["useEffect","useState","jsxDEV","_jsxDEV","DoctorSelect","_s","doctors","setDoctors","httpError","setHttpError","fetchDoctors","baseUrl","url","response","fetch","ok","Error","responseJson","json","responseData","_embedded","loadedDoctors","key","push","docid","name","gender","email","phone","expertise","catch","error","message","doctorList","map","doc","value","children","fileName","_jsxFileName","lineNumber","columnNumber","className","selected","_c","$RefreshReg$"],"sources":["/Users/jing/Documents/Others/FSD_11/Course/WebDevelopment_II/FinalProject/SpringClinic/FrontReact/springclinic/src/DoctorSelect.tsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport DoctorModel from \"./DoctorModel\";\n\nexport const DoctorSelect = () => {\n    const [doctors, setDoctors] = useState<DoctorModel[]>([]);\n    const [httpError, setHttpError] = useState(null);\n\n    useEffect(() => {\n\n        const fetchDoctors = async () => {\n\n            const baseUrl: string = \"http://localhost:8080/doctors\";\n            const url: string = `${baseUrl}?page=0&size=9`;\n           const response = await fetch(url);\n            \n\n            if (!response.ok) {\n                throw new Error('Something went wrong!');\n            }\n\n            const responseJson = await response.json();\n            const responseData = responseJson._embedded.doctors;\n            const loadedDoctors: DoctorModel[] = [];\n\n            for (const key in responseData) {\n                loadedDoctors.push({\n                    docid: responseData[key].docid,\n                    name: responseData[key].name,\n                    gender: responseData[key].gender,\n                    email: responseData[key].email,\n                    phone: responseData[key].phone,\n                    expertise: responseData[key].expertise,\n                });\n            }\n\n            setDoctors(loadedDoctors);\n        };\n\n        fetchDoctors().catch((error: any) => {\n            setHttpError(error.message);\n        })\n\n    }, []);\n\n    const doctorList = doctors.map(doc => {\n\n        return (\n        <option value={doc.docid}>{doc.name}</option>\n        )\n    });\n\nreturn (\n<div>\n<select className=\"form-select\" aria-label=\"Default select example\" name=\"docid\">\n  <option selected>Choose Doctor</option>\n{doctorList}\n</select>\n\n</div>\n\n );\n}"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG5C,OAAO,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC9B,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGN,QAAQ,CAAgB,EAAE,CAAC;EACzD,MAAM,CAACO,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAEhDD,SAAS,CAAC,MAAM;IAEZ,MAAMU,YAAY,GAAG,MAAAA,CAAA,KAAY;MAE7B,MAAMC,OAAe,GAAG,+BAA+B;MACvD,MAAMC,GAAW,GAAG,GAAGD,OAAO,gBAAgB;MAC/C,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAG,CAAC;MAGhC,IAAI,CAACC,QAAQ,CAACE,EAAE,EAAE;QACd,MAAM,IAAIC,KAAK,CAAC,uBAAuB,CAAC;MAC5C;MAEA,MAAMC,YAAY,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;MAC1C,MAAMC,YAAY,GAAGF,YAAY,CAACG,SAAS,CAACd,OAAO;MACnD,MAAMe,aAA4B,GAAG,EAAE;MAEvC,KAAK,MAAMC,GAAG,IAAIH,YAAY,EAAE;QAC5BE,aAAa,CAACE,IAAI,CAAC;UACfC,KAAK,EAAEL,YAAY,CAACG,GAAG,CAAC,CAACE,KAAK;UAC9BC,IAAI,EAAEN,YAAY,CAACG,GAAG,CAAC,CAACG,IAAI;UAC5BC,MAAM,EAAEP,YAAY,CAACG,GAAG,CAAC,CAACI,MAAM;UAChCC,KAAK,EAAER,YAAY,CAACG,GAAG,CAAC,CAACK,KAAK;UAC9BC,KAAK,EAAET,YAAY,CAACG,GAAG,CAAC,CAACM,KAAK;UAC9BC,SAAS,EAAEV,YAAY,CAACG,GAAG,CAAC,CAACO;QACjC,CAAC,CAAC;MACN;MAEAtB,UAAU,CAACc,aAAa,CAAC;IAC7B,CAAC;IAEDX,YAAY,CAAC,CAAC,CAACoB,KAAK,CAAEC,KAAU,IAAK;MACjCtB,YAAY,CAACsB,KAAK,CAACC,OAAO,CAAC;IAC/B,CAAC,CAAC;EAEN,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,UAAU,GAAG3B,OAAO,CAAC4B,GAAG,CAACC,GAAG,IAAI;IAElC,oBACAhC,OAAA;MAAQiC,KAAK,EAAED,GAAG,CAACX,KAAM;MAAAa,QAAA,EAAEF,GAAG,CAACV;IAAI;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAS,CAAC;EAEjD,CAAC,CAAC;EAEN,oBACAtC,OAAA;IAAAkC,QAAA,eACAlC,OAAA;MAAQuC,SAAS,EAAC,aAAa;MAAC,cAAW,wBAAwB;MAACjB,IAAI,EAAC,OAAO;MAAAY,QAAA,gBAC9ElC,OAAA;QAAQwC,QAAQ;QAAAN,QAAA,EAAC;MAAa;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,EACxCR,UAAU;IAAA;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEJ,CAAC;AAGN,CAAC;AAAApC,EAAA,CA1DYD,YAAY;AAAAwC,EAAA,GAAZxC,YAAY;AAAA,IAAAwC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}